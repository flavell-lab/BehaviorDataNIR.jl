name: Documentation
  
on:
  push:
    branches:
      - main
    tags: '*'
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@latest
        with:
          version: '1.9.2'
      - uses: actions/checkout@master
        with:
          repository: flavell-lab/FlavellBase.jl
          path: ./FlavellBase.jl
          token: ${{ secrets.GOLDENRATIO1618_ACCESS_TOKEN }}
      - uses: actions/checkout@master
        with:
          repository: flavell-lab/TotalVariation.jl
          path: ./TotalVariation.jl
          token: ${{ secrets.GOLDENRATIO1618_ACCESS_TOKEN }}
      - uses: actions/checkout@master
        with:
          repository: flavell-lab/SegmentationStats.jl
          path: ./SegmentationStats.jl
          token: ${{ secrets.GOLDENRATIO1618_ACCESS_TOKEN }}
      - uses: actions/checkout@master
        with:
          repository: flavell-lab/UNet2D.jl
          path: ./UNet2D.jl
          token: ${{ secrets.GOLDENRATIO1618_ACCESS_TOKEN }}
      - name: Install Julia Python environment
        run: julia --project=docs/ -e 'using Pkg; 
          Pkg.add("PyCall");
          ENV["PYTHON"] = "";
          Pkg.build("PyCall");'
      - name: Setup python packages
        run: ~/.julia/conda/3/x86_64/bin/pip install torch==1.13.1 torchvision torchaudio;
          cd unet2d;
          ~/.julia/conda/3/x86_64/bin/pip install .
      - name: Install packages
        run: julia --project=docs/ -e 'using Pkg;
          Pkg.add(PackageSpec(path="./FlavellBase.jl"));
          Pkg.add(PackageSpec(path="./TotalVariation.jl"));
          Pkg.add(PackageSpec(path="./SegmentationStats.jl"));
          Pkg.add(PackageSpec(path="./UNet2D.jl")); 
          Pkg.add(PackageSpec(path=pwd())); Pkg.instantiate()'
      - name: Build and deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # For authentication with GitHub Actions token
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }} # For authentication with SSH deploy key
        run: julia --project=docs/ docs/make.jl
